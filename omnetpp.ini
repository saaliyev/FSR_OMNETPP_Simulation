[General]
network = fsr.src.src.FSR
seed-set = ${repetition}
repeat = 30
sim-time-limit = 3000s

cmdenv-express-mode = true
cmdenv-redirect-output = false
cmdenv-event-banners = false

# Configure signals to be recorded by default for all simulations
**.endToEndDelaySignal.vector = true
**.throughputSignal.vector = true
**.packetDeliveryRatioSignal.vector = true
**.dataOverheadSignal.vector = true
**.controlOverheadSignal.vector = true

# For raw counts for aggregation in scalar results (finish() method)
**.packetsSentDataAsSourceSignal.scalar = true
**.packetsReceivedDataAsDestinationSignal.scalar = true
**.dataBytesSentTotalSignal.scalar = true
**.dataBytesReceivedTotalSignal.scalar = true
**.controlBytesSentTotalSignal.scalar = true
**.controlBytesReceivedTotalSignal.scalar = true


# --- Base Configuration ---
[Config FSR_Base]
extends = General
output-vector-file = results/base_config-${repetition}.vec
output-scalar-file = results/base_config-${repetition}.sca
FSR.numNodes = 25
FSR.playgroundX = 1000m
FSR.playgroundY = 1000m
FSR.node[*].maxSpeed = 20mps
FSR.node[*].minSpeed = 10mps
FSR.node[*].pauseTime = 1s
FSR.node[*].transmissionRange = 250m
FSR.node[*].fsrUpdateInterval = 1.0s # Frequent updates for local scope
FSR.node[*].fsrGlobalUpdateInterval = 5.0s # NEW: Less frequent updates for global scope (e.g., 5 times slower)
FSR.node[*].numFisheyeScopes = 2
FSR.node[*].trafficInterarrivalTime = 2.5s
FSR.node[*].dataPacketSize = 512B
FSR.numTrafficSessions = 5
FSR.node[*].x = uniform(0m, FSR.playgroundX)
FSR.node[*].y = uniform(0m, FSR.playgroundY)
FSR.node[*].myId = index

# --- Simulation Campaign Configurations ---
# Remember to uncomment one [Config] block at a time or adjust `opp_runall`
# command to specify which configs to run.

# 1. Impact of Network Size (Number of Nodes)
[Config NetworkSize_10Nodes]
extends = FSR_Base
output-vector-file = results/NetworkSize_10Nodes-${repetition}.vec
output-scalar-file = results/NetworkSize_10Nodes-${repetition}.sca
FSR.numNodes = 10
FSR.numTrafficSessions = 2

[Config NetworkSize_25Nodes]
extends = FSR_Base
output-vector-file = results/NetworkSize_25Nodes-${repetition}.vec
output-scalar-file = results/NetworkSize_25Nodes-${repetition}.sca
FSR.numNodes = 25
FSR.numTrafficSessions = 5

[Config NetworkSize_50Nodes]
extends = FSR_Base
output-vector-file = results/NetworkSize_50Nodes-${repetition}.vec
output-scalar-file = results/NetworkSize_50Nodes-${repetition}.sca
FSR.numNodes = 50
FSR.numTrafficSessions = 10

[Config NetworkSize_100Nodes]
extends = FSR_Base
output-vector-file = results/NetworkSize_100Nodes-${repetition}.vec
output-scalar-file = results/NetworkSize_100Nodes-${repetition}.sca
FSR.numNodes = 100
FSR.numTrafficSessions = 20

# 2. Impact of Network Connectivity (Average Degree - varied by Transmission Range)
[Config Connectivity_Low] # Sparse network
extends = FSR_Base
output-vector-file = results/Connectivity_Low-${repetition}.vec
output-scalar-file = results/Connectivity_Low-${repetition}.sca
FSR.node[*].transmissionRange = 100m

[Config Connectivity_Medium] # Default range
extends = FSR_Base
output-vector-file = results/Connectivity_Medium-${repetition}.vec
output-scalar-file = results/Connectivity_Medium-${repetition}.sca
FSR.node[*].transmissionRange = 250m

[Config Connectivity_High] # Dense network
extends = FSR_Base
output-vector-file = results/Connectivity_High-${repetition}.vec
output-scalar-file = results/Connectivity_High-${repetition}.sca
FSR.node[*].transmissionRange = 400m

# 3. Impact of Topological Rate of Change (Mobility Parameters)
[Config Mobility_LowChange] # Slow movement, long pauses
extends = FSR_Base
output-vector-file = results/Mobility_LowChange-${repetition}.vec
output-scalar-file = results/Mobility_LowChange-${repetition}.sca
FSR.node[*].maxSpeed = 5mps
FSR.node[*].minSpeed = 1mps
FSR.node[*].pauseTime = 30s

[Config Mobility_MediumChange] # Default mobility
extends = FSR_Base
output-vector-file = results/Mobility_MediumChange-${repetition}.vec
output-scalar-file = results/Mobility_MediumChange-${repetition}.sca
FSR.node[*].maxSpeed = 20mps
FSR.node[*].minSpeed = 10mps
FSR.node[*].pauseTime = 1s

[Config Mobility_HighChange] # Fast movement, short pauses
extends = FSR_Base
output-vector-file = results/Mobility_HighChange-${repetition}.vec
output-scalar-file = results/Mobility_HighChange-${repetition}.sca
FSR.node[*].maxSpeed = 50mps
FSR.node[*].minSpeed = 25mps
FSR.node[*].pauseTime = 0.1s

# 4. Impact of Offered Load (Traffic Generation Parameters)
[Config Load_Low] # Infrequent, small packets
extends = FSR_Base
output-vector-file = results/Load_Low-${repetition}.vec
output-scalar-file = results/Load_Low-${repetition}.sca
FSR.node[*].trafficInterarrivalTime = 10s
FSR.node[*].dataPacketSize = 128B
FSR.numTrafficSessions = 2

[Config Load_Medium] # Default load
extends = FSR_Base
output-vector-file = results/Load_Medium-${repetition}.vec
output-scalar-file = results/Load_Medium-${repetition}.sca
FSR.node[*].trafficInterarrivalTime = 2.5s
FSR.node[*].dataPacketSize = 512B
FSR.numTrafficSessions = 5

[Config Load_High] # Frequent, large packets, more sources
extends = FSR_Base
output-vector-file = results/Load_High-${repetition}.vec
output-scalar-file = results/Load_High-${repetition}.sca
FSR.node[*].trafficInterarrivalTime = 0.5s
FSR.node[*].dataPacketSize = 1024B
FSR.numTrafficSessions = 10
